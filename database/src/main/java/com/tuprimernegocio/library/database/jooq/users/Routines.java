/*
 * This file is generated by jOOQ.
 */
package com.tuprimernegocio.library.database.jooq.users;


import com.tuprimernegocio.library.database.jooq.users.routines.Spdeleteaddress;
import com.tuprimernegocio.library.database.jooq.users.routines.Spfindallusers;
import com.tuprimernegocio.library.database.jooq.users.routines.Spfindallusersbyadmin;
import com.tuprimernegocio.library.database.jooq.users.routines.Spfinduserbyemail;
import com.tuprimernegocio.library.database.jooq.users.routines.Spgrantadminrole;
import com.tuprimernegocio.library.database.jooq.users.routines.Spgrantuserrole;
import com.tuprimernegocio.library.database.jooq.users.routines.Spinsertadmin;
import com.tuprimernegocio.library.database.jooq.users.routines.Spinsertuser;
import com.tuprimernegocio.library.database.jooq.users.routines.Sprevokeadminrole;
import com.tuprimernegocio.library.database.jooq.users.routines.Sprevokeuserrole;
import com.tuprimernegocio.library.database.jooq.users.routines.Spselectaddress;
import com.tuprimernegocio.library.database.jooq.users.routines.Spselectphones;
import com.tuprimernegocio.library.database.jooq.users.routines.Spupdateaddress;
import com.tuprimernegocio.library.database.jooq.users.routines.Spupdatephones;
import com.tuprimernegocio.library.database.jooq.users.routines.Spupdateuserpassword;
import com.tuprimernegocio.library.database.jooq.users.routines.Spvalidateuser;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;


/**
 * Convenience access to all stored procedures and functions in users
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>users.spDeleteAddress</code>
     */
    public static void spdeleteaddress(Configuration configuration, Integer pUserId) {
        Spdeleteaddress p = new Spdeleteaddress();
        p.setPUserId(pUserId);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spFindAllUsers</code>
     */
    public static void spfindallusers(Configuration configuration) {
        Spfindallusers p = new Spfindallusers();

        p.execute(configuration);
    }

    /**
     * Call <code>users.spFindAllUsersByAdmin</code>
     */
    public static void spfindallusersbyadmin(Configuration configuration, Integer adminId) {
        Spfindallusersbyadmin p = new Spfindallusersbyadmin();
        p.setAdminId(adminId);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spFindUserByEmail</code>
     */
    public static void spfinduserbyemail(Configuration configuration, String pEmail) {
        Spfinduserbyemail p = new Spfinduserbyemail();
        p.setPEmail(pEmail);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spGrantAdminRole</code>
     */
    public static void spgrantadminrole(Configuration configuration, Integer pUserId) {
        Spgrantadminrole p = new Spgrantadminrole();
        p.setPUserId(pUserId);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spGrantUserRole</code>
     */
    public static void spgrantuserrole(Configuration configuration, Integer pUserId) {
        Spgrantuserrole p = new Spgrantuserrole();
        p.setPUserId(pUserId);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spInsertAdmin</code>
     */
    public static void spinsertadmin(Configuration configuration, String pEmail, String pPassword, String pFullName) {
        Spinsertadmin p = new Spinsertadmin();
        p.setPEmail(pEmail);
        p.setPPassword(pPassword);
        p.setPFullName(pFullName);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spInsertUser</code>
     */
    public static void spinsertuser(Configuration configuration, String pEmail, String pPassword, String pFullName) {
        Spinsertuser p = new Spinsertuser();
        p.setPEmail(pEmail);
        p.setPPassword(pPassword);
        p.setPFullName(pFullName);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spRevokeAdminRole</code>
     */
    public static void sprevokeadminrole(Configuration configuration, Integer pUserId) {
        Sprevokeadminrole p = new Sprevokeadminrole();
        p.setPUserId(pUserId);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spRevokeUserRole</code>
     */
    public static void sprevokeuserrole(Configuration configuration, Integer pUserId) {
        Sprevokeuserrole p = new Sprevokeuserrole();
        p.setPUserId(pUserId);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spSelectAddress</code>
     */
    public static void spselectaddress(Configuration configuration, Integer pUserId) {
        Spselectaddress p = new Spselectaddress();
        p.setPUserId(pUserId);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spSelectPhones</code>
     */
    public static void spselectphones(Configuration configuration, Integer pUserId) {
        Spselectphones p = new Spselectphones();
        p.setPUserId(pUserId);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spUpdateAddress</code>
     */
    public static void spupdateaddress(Configuration configuration, Integer pUserId, String pAddressLine1, String pAddressLine2, String pProvince, String pCanton, String pPostalCode) {
        Spupdateaddress p = new Spupdateaddress();
        p.setPUserId(pUserId);
        p.setPAddressLine1(pAddressLine1);
        p.setPAddressLine2(pAddressLine2);
        p.setPProvince(pProvince);
        p.setPCanton(pCanton);
        p.setPPostalCode(pPostalCode);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spUpdatePhones</code>
     */
    public static void spupdatephones(Configuration configuration, Integer pUserId, String pWhatsapp, String pOtherNumbers) {
        Spupdatephones p = new Spupdatephones();
        p.setPUserId(pUserId);
        p.setPWhatsapp(pWhatsapp);
        p.setPOtherNumbers(pOtherNumbers);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spUpdateUserPassword</code>
     */
    public static void spupdateuserpassword(Configuration configuration, String pEmail, String pNewPassword) {
        Spupdateuserpassword p = new Spupdateuserpassword();
        p.setPEmail(pEmail);
        p.setPNewPassword(pNewPassword);

        p.execute(configuration);
    }

    /**
     * Call <code>users.spValidateUser</code>
     */
    public static void spvalidateuser(Configuration configuration, String pEmail, String pPassword) {
        Spvalidateuser p = new Spvalidateuser();
        p.setPEmail(pEmail);
        p.setPPassword(pPassword);

        p.execute(configuration);
    }
}
