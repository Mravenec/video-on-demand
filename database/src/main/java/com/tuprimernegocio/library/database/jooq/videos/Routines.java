/*
 * This file is generated by jOOQ.
 */
package com.tuprimernegocio.library.database.jooq.videos;


import com.tuprimernegocio.library.database.jooq.videos.routines.Spcreatesection;
import com.tuprimernegocio.library.database.jooq.videos.routines.Spgetallvideosbysectionsanduser;
import com.tuprimernegocio.library.database.jooq.videos.routines.Spgetallvideosgroupedbysections;
import com.tuprimernegocio.library.database.jooq.videos.routines.Spinsertvideo;
import com.tuprimernegocio.library.database.jooq.videos.routines.Spupdatesectionsequence;
import com.tuprimernegocio.library.database.jooq.videos.routines.Spupdatevideosequence;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;


/**
 * Convenience access to all stored procedures and functions in videos
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>videos.spCreateSection</code>
     */
    public static void spcreatesection(Configuration configuration, String pName, Integer pAdminId) {
        Spcreatesection p = new Spcreatesection();
        p.setPName(pName);
        p.setPAdminId(pAdminId);

        p.execute(configuration);
    }

    /**
     * Call <code>videos.spGetAllVideosBySectionsAndUser</code>
     */
    public static void spgetallvideosbysectionsanduser(Configuration configuration, Integer pUserId) {
        Spgetallvideosbysectionsanduser p = new Spgetallvideosbysectionsanduser();
        p.setPUserId(pUserId);

        p.execute(configuration);
    }

    /**
     * Call <code>videos.spGetAllVideosGroupedBySections</code>
     */
    public static void spgetallvideosgroupedbysections(Configuration configuration) {
        Spgetallvideosgroupedbysections p = new Spgetallvideosgroupedbysections();

        p.execute(configuration);
    }

    /**
     * Call <code>videos.spInsertVideo</code>
     */
    public static void spinsertvideo(Configuration configuration, String pTitle, String pUrl, String pContent, Integer pSequenceNumber, Integer pSectionId, Integer pAdminId) {
        Spinsertvideo p = new Spinsertvideo();
        p.setPTitle(pTitle);
        p.setPUrl(pUrl);
        p.setPContent(pContent);
        p.setPSequenceNumber(pSequenceNumber);
        p.setPSectionId(pSectionId);
        p.setPAdminId(pAdminId);

        p.execute(configuration);
    }

    /**
     * Call <code>videos.spUpdateSectionSequence</code>
     */
    public static void spupdatesectionsequence(Configuration configuration, Integer pSectionId, Integer newSequenceNumber, Integer pAdminId) {
        Spupdatesectionsequence p = new Spupdatesectionsequence();
        p.setPSectionId(pSectionId);
        p.setNewSequenceNumber(newSequenceNumber);
        p.setPAdminId(pAdminId);

        p.execute(configuration);
    }

    /**
     * Call <code>videos.spUpdateVideoSequence</code>
     */
    public static void spupdatevideosequence(Configuration configuration, Integer pSectionId, Integer pVideoId, Integer pNewSequenceNumber, Integer pAdminId) {
        Spupdatevideosequence p = new Spupdatevideosequence();
        p.setPSectionId(pSectionId);
        p.setPVideoId(pVideoId);
        p.setPNewSequenceNumber(pNewSequenceNumber);
        p.setPAdminId(pAdminId);

        p.execute(configuration);
    }
}
