/*
 * This file is generated by jOOQ.
 */
package com.tuprimernegocio.library.database.jooq.videos.tables.records;


import com.tuprimernegocio.library.database.jooq.videos.tables.UserVideoWatched;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserVideoWatchedRecord extends UpdatableRecordImpl<UserVideoWatchedRecord> implements Record3<Integer, Integer, Byte> {

    private static final long serialVersionUID = 1422026756;

    /**
     * Setter for <code>videos.user_video_watched.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>videos.user_video_watched.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>videos.user_video_watched.video_id</code>.
     */
    public void setVideoId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>videos.user_video_watched.video_id</code>.
     */
    public Integer getVideoId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>videos.user_video_watched.watched</code>.
     */
    public void setWatched(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>videos.user_video_watched.watched</code>.
     */
    public Byte getWatched() {
        return (Byte) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Byte> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Byte> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserVideoWatched.USER_VIDEO_WATCHED.USER_ID;
    }

    @Override
    public Field<Integer> field2() {
        return UserVideoWatched.USER_VIDEO_WATCHED.VIDEO_ID;
    }

    @Override
    public Field<Byte> field3() {
        return UserVideoWatched.USER_VIDEO_WATCHED.WATCHED;
    }

    @Override
    public Integer component1() {
        return getUserId();
    }

    @Override
    public Integer component2() {
        return getVideoId();
    }

    @Override
    public Byte component3() {
        return getWatched();
    }

    @Override
    public Integer value1() {
        return getUserId();
    }

    @Override
    public Integer value2() {
        return getVideoId();
    }

    @Override
    public Byte value3() {
        return getWatched();
    }

    @Override
    public UserVideoWatchedRecord value1(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserVideoWatchedRecord value2(Integer value) {
        setVideoId(value);
        return this;
    }

    @Override
    public UserVideoWatchedRecord value3(Byte value) {
        setWatched(value);
        return this;
    }

    @Override
    public UserVideoWatchedRecord values(Integer value1, Integer value2, Byte value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserVideoWatchedRecord
     */
    public UserVideoWatchedRecord() {
        super(UserVideoWatched.USER_VIDEO_WATCHED);
    }

    /**
     * Create a detached, initialised UserVideoWatchedRecord
     */
    public UserVideoWatchedRecord(Integer userId, Integer videoId, Byte watched) {
        super(UserVideoWatched.USER_VIDEO_WATCHED);

        set(0, userId);
        set(1, videoId);
        set(2, watched);
    }
}
