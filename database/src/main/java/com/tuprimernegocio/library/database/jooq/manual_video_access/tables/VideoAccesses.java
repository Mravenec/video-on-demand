/*
 * This file is generated by jOOQ.
 */
package com.tuprimernegocio.library.database.jooq.manual_video_access.tables;


import com.tuprimernegocio.library.database.jooq.manual_video_access.Indexes;
import com.tuprimernegocio.library.database.jooq.manual_video_access.Keys;
import com.tuprimernegocio.library.database.jooq.manual_video_access.ManualVideoAccess;
import com.tuprimernegocio.library.database.jooq.manual_video_access.tables.records.VideoAccessesRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VideoAccesses extends TableImpl<VideoAccessesRecord> {

    private static final long serialVersionUID = 1441588497;

    /**
     * The reference instance of <code>manual_video_access.video_accesses</code>
     */
    public static final VideoAccesses VIDEO_ACCESSES = new VideoAccesses();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VideoAccessesRecord> getRecordType() {
        return VideoAccessesRecord.class;
    }

    /**
     * The column <code>manual_video_access.video_accesses.id</code>.
     */
    public final TableField<VideoAccessesRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>manual_video_access.video_accesses.email</code>.
     */
    public final TableField<VideoAccessesRecord, String> EMAIL = createField(DSL.name("email"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>manual_video_access.video_accesses.is_active</code>.
     */
    public final TableField<VideoAccessesRecord, Byte> IS_ACTIVE = createField(DSL.name("is_active"), org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>manual_video_access.video_accesses.admin_id</code>.
     */
    public final TableField<VideoAccessesRecord, Integer> ADMIN_ID = createField(DSL.name("admin_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>manual_video_access.video_accesses.created_at</code>.
     */
    public final TableField<VideoAccessesRecord, Timestamp> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>manual_video_access.video_accesses.updated_at</code>.
     */
    public final TableField<VideoAccessesRecord, Timestamp> UPDATED_AT = createField(DSL.name("updated_at"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("current_timestamp()", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>manual_video_access.video_accesses</code> table reference
     */
    public VideoAccesses() {
        this(DSL.name("video_accesses"), null);
    }

    /**
     * Create an aliased <code>manual_video_access.video_accesses</code> table reference
     */
    public VideoAccesses(String alias) {
        this(DSL.name(alias), VIDEO_ACCESSES);
    }

    /**
     * Create an aliased <code>manual_video_access.video_accesses</code> table reference
     */
    public VideoAccesses(Name alias) {
        this(alias, VIDEO_ACCESSES);
    }

    private VideoAccesses(Name alias, Table<VideoAccessesRecord> aliased) {
        this(alias, aliased, null);
    }

    private VideoAccesses(Name alias, Table<VideoAccessesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> VideoAccesses(Table<O> child, ForeignKey<O, VideoAccessesRecord> key) {
        super(child, key, VIDEO_ACCESSES);
    }

    @Override
    public Schema getSchema() {
        return ManualVideoAccess.MANUAL_VIDEO_ACCESS;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VIDEO_ACCESSES_EMAIL, Indexes.VIDEO_ACCESSES_PRIMARY);
    }

    @Override
    public Identity<VideoAccessesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_VIDEO_ACCESSES;
    }

    @Override
    public UniqueKey<VideoAccessesRecord> getPrimaryKey() {
        return Keys.KEY_VIDEO_ACCESSES_PRIMARY;
    }

    @Override
    public List<UniqueKey<VideoAccessesRecord>> getKeys() {
        return Arrays.<UniqueKey<VideoAccessesRecord>>asList(Keys.KEY_VIDEO_ACCESSES_PRIMARY, Keys.KEY_VIDEO_ACCESSES_EMAIL);
    }

    @Override
    public VideoAccesses as(String alias) {
        return new VideoAccesses(DSL.name(alias), this);
    }

    @Override
    public VideoAccesses as(Name alias) {
        return new VideoAccesses(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VideoAccesses rename(String name) {
        return new VideoAccesses(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VideoAccesses rename(Name name) {
        return new VideoAccesses(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Byte, Integer, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
