/* 
 *export const validateToken = () => async (dispatch) => {
    try {
        const token = localStorage.getItem('jwtToken');

        if (!token) {
            throw new Error('Token no disponible');
        }

        const response = await axios.get('http://localhost:8080/validateToken', {
            headers: { Authorization: `Bearer ${token}` },
        });

        if (response.data.isValid) {
            setAuthToken(token);
        } else {
            dispatch(logout()); // Llama a la acción de logout si el token no es válido
        }
    } catch (error) {
        console.error('Error durante la validación del token:', error);
        dispatch(logout()); // Llama a la acción de logout en caso de error
    }
};

// Llama a validateToken inicialmente cuando se carga la aplicación
validateToken();

// Configura un intervalo para validar el token cada 15 minutos (por ejemplo)
const tokenValidationInterval = 15 * 60 * 1000; // 15 minutos en milisegundos
setInterval(() => {
    validateToken();
}, tokenValidationInterval); 
 * 
*/